Required Java version: 8
Building Docker Image for project houbb_nlp-hanzi-similar with Java version 8...
Image built successfully. Running container...
Maven build completed successfully.



========= DEPENDENCIES NEWER VERSIONS ==========

[
  {
    dependency: { group: 'com.github.houbb', name: 'heaven', version: '0.9.0' },
    newerVersions: [ '0.13.0', '0.12.0', '0.11.0', '0.10.0', '0.9.0' ]
  },
  {
    dependency: { group: 'com.github.houbb', name: 'pinyin', version: '0.4.0' },
    newerVersions: [ '0.4.0' ]
  },
  {
    dependency: { group: 'junit', name: 'junit', version: '4.13.1' },
    newerVersions: [ '4.13.2', '4.13.1' ]
  },
  {
    dependency: {
      group: 'org.apiguardian',
      name: 'apiguardian-api',
      version: '1.0.0'
    },
    newerVersions: [ '1.1.2', '1.1.1', '1.1.0', '1.0.0' ]
  },
  {
    dependency: { group: 'com.github.houbb', name: 'nlp-chaizi', version: '1.1.0' },
    newerVersions: [ '1.1.0' ]
  }
]



========= DEPENDENCIES VERSIONS RANK ==========

[
  {
    dependency: { group: 'com.github.houbb', name: 'heaven', version: '0.9.0' },
    rank: [
      {
        version: '0.9.0',
        detailsDependencyVulnerability: { details: [], rate: 0 }
      },
      {
        version: '0.10.0',
        detailsDependencyVulnerability: { details: [], rate: 0 }
      },
      {
        version: '0.11.0',
        detailsDependencyVulnerability: { details: [], rate: 0 }
      },
      {
        version: '0.12.0',
        detailsDependencyVulnerability: { details: [], rate: 0 }
      },
      {
        version: '0.13.0',
        detailsDependencyVulnerability: { details: [], rate: 0 }
      }
    ]
  },
  {
    dependency: { group: 'com.github.houbb', name: 'pinyin', version: '0.4.0' },
    rank: [
      {
        version: '0.4.0',
        detailsDependencyVulnerability: { details: [], rate: 0 }
      }
    ]
  },
  {
    dependency: { group: 'junit', name: 'junit', version: '4.13.1' },
    rank: [
      {
        version: '4.13.1',
        detailsDependencyVulnerability: { details: [], rate: 0 }
      },
      {
        version: '4.13.2',
        detailsDependencyVulnerability: { details: [], rate: 0 }
      }
    ]
  },
  {
    dependency: {
      group: 'org.apiguardian',
      name: 'apiguardian-api',
      version: '1.0.0'
    },
    rank: [
      {
        version: '1.0.0',
        detailsDependencyVulnerability: { details: [], rate: 0 }
      },
      {
        version: '1.1.0',
        detailsDependencyVulnerability: { details: [], rate: 0 }
      },
      {
        version: '1.1.1',
        detailsDependencyVulnerability: { details: [], rate: 0 }
      },
      {
        version: '1.1.2',
        detailsDependencyVulnerability: { details: [], rate: 0 }
      }
    ]
  },
  {
    dependency: { group: 'com.github.houbb', name: 'nlp-chaizi', version: '1.1.0' },
    rank: [
      {
        version: '1.1.0',
        detailsDependencyVulnerability: { details: [], rate: 0 }
      }
    ]
  }
]
Applying version 0.9.0 with vulnerability rate 0 of heaven dependency in pom.xml
Keeping the current version 0.9.0 of heaven


Applying version 0.4.0 with vulnerability rate 0 of pinyin dependency in pom.xml
Keeping the current version 0.4.0 of pinyin


Applying version 4.13.1 with vulnerability rate 0 of junit dependency in pom.xml
Keeping the current version 4.13.1 of junit


Applying version 1.0.0 with vulnerability rate 0 of apiguardian-api dependency in pom.xml
Keeping the current version 1.0.0 of apiguardian-api


Applying version 1.1.0 with vulnerability rate 0 of nlp-chaizi dependency in pom.xml
Keeping the current version 1.1.0 of nlp-chaizi


Dependency and Security Report

The information was obtained from Open Source Insights, which gathers security advisories information from OSV.

Analyzed Dependencies:

- com.github.houbb:heaven: 0.9.0 [NEW] [OLD]
  Version: 0.9.0 [NEW] [OLD], Vulnerabilities: 0
  Version: 0.10.0 , Vulnerabilities: 0
  Version: 0.11.0 , Vulnerabilities: 0
  Version: 0.12.0 , Vulnerabilities: 0
  Version: 0.13.0 , Vulnerabilities: 0

- com.github.houbb:pinyin: 0.4.0 [NEW] [OLD]
  Version: 0.4.0 [NEW] [OLD], Vulnerabilities: 0

- junit:junit: 4.13.1 [NEW] [OLD]
  Version: 4.13.1 [NEW] [OLD], Vulnerabilities: 0
  Version: 4.13.2 , Vulnerabilities: 0

- org.apiguardian:apiguardian-api: 1.0.0 [NEW] [OLD]
  Version: 1.0.0 [NEW] [OLD], Vulnerabilities: 0
  Version: 1.1.0 , Vulnerabilities: 0
  Version: 1.1.1 , Vulnerabilities: 0
  Version: 1.1.2 , Vulnerabilities: 0

- com.github.houbb:nlp-chaizi: 1.1.0 [NEW] [OLD]
  Version: 1.1.0 [NEW] [OLD], Vulnerabilities: 0

It was executed:
- Project Build: Yes
- Project Tests: Yes
- Exploratory Testing: No

Vulnerabilities Summary:
The information was obtained from Open Source Insights, which gathers security advisories information from OSV.

Number of dependencies with vulnerabilities:
 Before: 0 After: 0
Number of vulnerabilities:
 Before: 0 After: 0
Before execution, total vulnerabilities were:
 Low: 0, Medium: 0, High: 0, Critical: 0
After execution, total vulnerabilities are:
 Low: 0, Medium: 0, High: 0, Critical: 0
Details of vulnerabilities before execution:
Details of vulnerabilities after execution:

CSV:
Number of dependencies with vulnerabilities (Before),Number of dependencies with vulnerabilities (After),Number of vulnerabilities (Before),Number of vulnerabilities (After),Low vulnerabilities (Before),Low vulnerabilities (After),Medium vulnerabilities (Before),Medium vulnerabilities (After),High vulnerabilities (Before),High vulnerabilities (After),Critical vulnerabilities (Before),Critical vulnerabilities (After),Project Type,Tests
0,0,0,0,0,0,0,0,0,0,0,0,maven,true
Recommendations:
- Prioritize updating dependencies to their latest, compatible versions that pass all builds and tests, while also manually reviewing and applying updates to the most secure versions available, even if this requires additional compatibility adjustments.
- Regularly conduct comprehensive security audits to promptly identify and address vulnerabilities within dependencies, incorporating both automated tools and expert reviews to ensure thorough coverage.
- Adopt secure coding practices throughout the development lifecycle to prevent the introduction of vulnerabilities, emphasizing code reviews, secure coding standards, and developer training on security best practices.
- Leverage automated testing, continuous integration, and continuous deployment (CI/CD) pipelines to maintain high standards of code quality and security, ensuring that any changes, including dependency updates, undergo rigorous testing before deployment.

Please consider the above recommendations to improve the security and stability of your project.


Stopping java container...
java-container-safer-houbb_nlp-hanzi-similar
Deleting Java container...
java-container-safer-houbb_nlp-hanzi-similar
