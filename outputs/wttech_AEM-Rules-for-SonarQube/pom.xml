<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.vml.aemrules</groupId>
    <artifactId>sonar-aemrules-plugin</artifactId>
    <packaging>sonar-plugin</packaging>
    <version>1.7</version>

    <name>AEM Rules for SonarQube</name>
    <description>SonarQube plugin with set of rules detecting possible bugs and bad smells specific for AEM development.</description>

    <inceptionYear>2015</inceptionYear>
    <organization>
        <name>VML</name>
        <url>https://www.vml.com/poland/</url>
    </organization>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>michal.chudy</id>
            <name>Michal Chudy</name>
            <email>michal.chudy@cognifide.com</email>
        </developer>
        <developer>
            <id>szymon.owczarzak</id>
            <name>Szymon Owczarzak</name>
            <email>szymon.owczarzak@cognifide.com</email>
        </developer>
        <developer>
            <id>piotr.wilczynski</id>
            <name>Piotr Wilczyński</name>
            <email>piotr.wilczynski@cognifide.com</email>
        </developer>
        <developer>
            <id>michal.tobiasz</id>
            <name>Michał Tobiasz</name>
            <email>michal.tobiasz@cognifide.com</email>
        </developer>
        <developer>
            <id>mateusz.bartkowiak</id>
            <name>Mateusz Bartkowiak</name>
            <email>mateusz.bartkowiak@cognifide.com</email>
        </developer>
        <developer>
            <id>jedrzej.plucinski</id>
            <name>Jędrzej Pluciński</name>
            <email>jedrzej.plucinski@cognifide.com</email>
        </developer>
        <developer>
            <id>krystian.panek</id>
            <name>Krystian Panek</name>
            <email>krystian.panek@cognifide.com</email>
        </developer>
        <developer>
            <id>tomasz.strzelecki</id>
            <name>Tomasz Strzelecki</name>
            <email>tomasz.strzelecki@vml.com</email>
        </developer>
    </developers>

    <contributors>
        <contributor>
            <name>Krzysztof Malinowski</name>
            <email>krzysztof.malinowski@motorolasolutions.com</email>
            <organization>Motorola Solutions, Inc.</organization>
            <organizationUrl>https://www.motorolasolutions.com</organizationUrl>
        </contributor>
    </contributors>

    <scm>
        <connection>scm:git:git@github.com:wttech/AEM-Rules-for-SonarQube.git</connection>
        <url>scm:git:git@github.com:wttech/AEM-Rules-for-SonarQube.git</url>
        <developerConnection>scm:git:git@github.com:wttech/AEM-Rules-for-SonarQube.git</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <issueManagement>
        <system>jira</system>
        <url>https://github.com/wttech/AEM-Rules-for-SonarQube/issues</url>
    </issueManagement>

    <distributionManagement>
        <repository>
            <id>cognifide-internal-repository</id>
            <name>Cognifide Internal Repository</name>
            <url>https://nexus.cognifide.com/content/repositories/cognifide-internal</url>
        </repository>
        <snapshotRepository>
            <id>cognifide-internal-snapshots-repository</id>
            <name>Cognifide Internal Repository</name>
            <url>https://nexus.cognifide.com/content/repositories/cognifide-internal-snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <htl.version>1.1.2-1.4.0</htl.version>
        <sonar.html.version>3.15.0.5107</sonar.html.version>
        <sonar.java.plugin>7.30.1.34514</sonar.java.plugin>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <sonar.pluginApiVersion>10.11.0.2468</sonar.pluginApiVersion>
        <sonar.pluginApiImplVersion>10.3.0.82913</sonar.pluginApiImplVersion>
        <sonar.testingHarnessVersion>10.7.0.96327</sonar.testingHarnessVersion>
        <sonar.javaCheksTestkitVersion>7.30.1.34514</sonar.javaCheksTestkitVersion>
        <jdk.min.version>11</jdk.min.version>
        <sonar.sources>src/main/java</sonar.sources>
        <coveralls.repo.token>4rVf3NGV0jyQ3EGrc8L86oEDoHWm6MgDD</coveralls.repo.token>
        <tagName>v${project.version}</tagName>
    </properties>

    <repositories>
        <repository>
            <id>central</id>
            <url>https://repo.maven.apache.org/maven2/</url>
        </repository>
        <repository>
            <id>adobe-releases</id>
            <url>https://repo.adobe.com/nexus/content/groups/public/</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- sonarsource version -->
        <dependency>
            <artifactId>sonar-plugin-api</artifactId>
            <groupId>org.sonarsource.api.plugin</groupId>
            <scope>provided</scope>
            <version>${sonar.pluginApiVersion}</version>
        </dependency>
        <dependency>
            <artifactId>sonar-html-plugin</artifactId>
            <groupId>org.sonarsource.html</groupId>
            <version>${sonar.html.version}</version>
        </dependency>
        <dependency>
            <artifactId>sonar-analyzer-commons</artifactId>
            <groupId>org.sonarsource.analyzer-commons</groupId>
            <version>2.14.0.3087</version>
        </dependency>
        <dependency>
            <artifactId>sonar-java-plugin</artifactId>
            <groupId>org.sonarsource.java</groupId>
            <type>sonar-plugin</type>
            <version>${sonar.java.plugin}</version>
        </dependency>
        <dependency>
            <artifactId>commons-lang3</artifactId>
            <groupId>org.apache.commons</groupId>
            <version>3.17.0</version>
        </dependency>
        <dependency>
            <artifactId>commons-io</artifactId>
            <groupId>commons-io</groupId>
            <version>2.17.0</version>
        </dependency>
        <dependency>
            <artifactId>annotations</artifactId>
            <groupId>org.jetbrains</groupId>
            <version>26.0.1</version>
        </dependency>
        <dependency>
            <artifactId>org.apache.sling.scripting.sightly.compiler</artifactId>
            <groupId>org.apache.sling</groupId>
            <version>${htl.version}</version>
        </dependency>

        <!-- unit tests -->
        <dependency>
            <artifactId>sonar-testing-harness</artifactId>
            <groupId>org.sonarsource.sonarqube</groupId>
            <scope>test</scope>
            <version>${sonar.testingHarnessVersion}</version>
        </dependency>
        <dependency>
            <artifactId>junit-jupiter-api</artifactId>
            <groupId>org.junit.jupiter</groupId>
            <scope>test</scope>
            <version>5.11.3</version>
        </dependency>
        <dependency>
            <artifactId>junit-jupiter-params</artifactId>
            <groupId>org.junit.jupiter</groupId>
            <scope>test</scope>
            <version>5.11.3</version>
        </dependency>
        <dependency>
            <artifactId>mockito-core</artifactId>
            <groupId>org.mockito</groupId>
            <scope>test</scope>
            <version>5.14.2</version>
        </dependency>
        <dependency>
            <artifactId>assertj-core</artifactId>
            <groupId>org.assertj</groupId>
            <scope>test</scope>
            <version>3.26.3</version>
        </dependency>
        <dependency>
            <artifactId>guava</artifactId>
            <groupId>com.google.guava</groupId>
            <scope>test</scope>
            <version>33.3.1-jre</version>
        </dependency>
        <dependency>
            <artifactId>sonar-plugin-api-impl</artifactId>
            <groupId>org.sonarsource.sonarqube</groupId>
            <scope>test</scope>
            <version>10.4.0.87240</version>
        </dependency>
        <dependency>
            <artifactId>java-checks-testkit</artifactId>
            <groupId>org.sonarsource.java</groupId>
            <scope>test</scope>
            <version>7.30.1.34514</version>
        </dependency>
        <dependency>
            <artifactId>logback-classic</artifactId>
            <groupId>ch.qos.logback</groupId>
            <scope>test</scope>
            <version>1.5.12</version>
        </dependency>
        <!-- aem dependencies-->
        <dependency>
            <artifactId>aem-api</artifactId>
            <groupId>com.adobe.aem</groupId>
            <scope>test</scope>
            <version>6.0.0.1</version>
        </dependency>
        <dependency>
            <artifactId>jcr</artifactId>
            <groupId>javax.jcr</groupId>
            <scope>test</scope>
            <version>2.0</version>
        </dependency>
        <dependency>
            <artifactId>servlet-api</artifactId>
            <groupId>javax.servlet</groupId>
            <scope>test</scope>
            <version>2.5</version>
        </dependency>
        <dependency>
            <artifactId>org.apache.felix.scr.annotations</artifactId>
            <groupId>org.apache.felix</groupId>
            <scope>test</scope>
            <version>1.12.0</version>
        </dependency>
        <dependency>
            <artifactId>org.apache.sling.servlets.resolver</artifactId>
            <groupId>org.apache.sling</groupId>
            <scope>test</scope>
            <version>2.3.2</version>
        </dependency>
        <dependency>
            <artifactId>org.apache.sling.api</artifactId>
            <groupId>org.apache.sling</groupId>
            <scope>test</scope>
            <version>2.25.4</version>
        </dependency>
        <dependency>
            <artifactId>org.apache.sling.models.api</artifactId>
            <groupId>org.apache.sling</groupId>
            <scope>test</scope>
            <version>1.3.8</version>
        </dependency>
        <dependency>
            <artifactId>org.apache.sling.query</artifactId>
            <groupId>org.apache.sling</groupId>
            <scope>test</scope>
            <version>4.0.2</version>
        </dependency>
        <dependency>
            <artifactId>org.osgi.core</artifactId>
            <groupId>org.osgi</groupId>
            <scope>test</scope>
            <version>6.0.0</version>
        </dependency>
        <dependency>
            <artifactId>org.osgi.compendium</artifactId>
            <groupId>org.osgi</groupId>
            <scope>test</scope>
            <version>5.0.0</version>
        </dependency>
        <dependency>
            <artifactId>org.osgi.service.component.annotations</artifactId>
            <groupId>org.osgi</groupId>
            <scope>test</scope>
            <version>1.5.1</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.sonarsource.sonar-packaging-maven-plugin</groupId>
                <artifactId>sonar-packaging-maven-plugin</artifactId>
                <version>1.23.0.740</version>
                <extensions>true</extensions>
                <configuration>
                    <pluginName>${project.name}</pluginName>
                    <pluginDescription>${project.description}</pluginDescription>
                    <pluginKey>aemrules</pluginKey>
                    <pluginClass>com.vml.aemrules.AemRulesSonarPlugin</pluginClass>
                    <pluginApiMinVersion>9.9</pluginApiMinVersion>
                    <pluginIssueTrackerUrl>https://github.com/wttech/AEM-Rules-for-SonarQube/issues</pluginIssueTrackerUrl>
                    <pluginSourcesUrl>https://github.com/wttech/AEM-Rules-for-SonarQube/tree/${tagName}</pluginSourcesUrl>
                    <pluginUrl>https://github.com/wttech/AEM-Rules-for-SonarQube</pluginUrl>
                    <sonarLintSupported>true</sonarLintSupported>
                    <skipDependenciesPackaging>true</skipDependenciesPackaging>
                    <requiredForLanguages>java</requiredForLanguages>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <shadedArtifactAttached>false</shadedArtifactAttached>
                    <minimizeJar>true</minimizeJar>
                    <createDependencyReducedPom>false</createDependencyReducedPom>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.13.0</version>
                <configuration>
                    <release>11</release>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.11</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.hazendaz.maven</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>4.5.0-M2</version>
                <configuration>
                    <repoToken>${coveralls.repo.token}</repoToken>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <skipExistingHeaders>false</skipExistingHeaders>
                    <header>${basedir}/assets/license-template.txt</header>
                    <headerDefinitions>
                        <header>${basedir}/assets/license-header-definition.xml</header>
                    </headerDefinitions>
                    <excludes>
                        <exclude>**/README</exclude>
                        <exclude>src/main/resources/**</exclude>
                        <exclude>**/LICENSE.txt</exclude>
                        <exclude>**.xml</exclude>
                        <exclude>assets/**</exclude>
                        <exclude>src/test/files/htl/HtlCommentsCheck.html</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>format</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--
              Maven dependency plugin is necessary for JavaCheckVerifier.verifyNoIssue to work properly. It copies
              dependencies other than "provided" to test-jars folder.
              Warning! If you remove it, tests which call JavaCheckVerifier.verifyNoIssue will
              always pass, even if they are incorrect.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <excludeScope>provided</excludeScope>
                            <outputDirectory>${project.build.directory}/test-jars</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>copy-jar-to-local-docker-plugins</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/local-docker-image/extensions/plugins</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/target</directory>
                                    <include>sonar-aemrules-plugin-${version}.jar</include>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
